# L, C, P = map(int, input().split())
#
# tableau = [list(input()) for i in range(L)]

from pprint import pprint

L, C, P = 4, 7, 10

example = [
    [-50, 21, -1, -83, 27, 3, 4],
    [2, -10, 60, 6, 11, -20, -27],
    [-12, 100, -2, 2, 9, -12, 80],
    [9, -21, -99, 1, 10, 7, -8]
]

score_creusee = [
    [0 for _ in range(C)] for _ in range(L + 1)
]

max_profit_per_column = [0 for _ in range(C + 1)]

meilleur_score_colonne_precedente = 0
meilleure_profondeur_colonne_precedente = 0

for i in range(C):
    score_creusee[0][i] = meilleur_score_colonne_precedente

    meilleur_score_colonne_actuelle = meilleur_score_colonne_precedente
    meilleure_profondeur_colonne_actuelle = 0
    for j in range(1, L + 1):
        penalite = 0

        if j > meilleure_profondeur_colonne_precedente:
            penalite = P

        score_creusee[j][i] = score_creusee[j - 1][i] + example[j - 1][i] - penalite

        # if (
        #     i > 1 and j > meilleure_profondeur_colonne_precedente
        # ):  # on regarde la case à gauche pour éventuellement la prendre et mutualiser
        #     # le coût de creusée
        #     score_avec_case_gauche = (
        #         score_creusee[j - 1][i] + example[j - 1][i] + example[j - 1][i - 1]
        #     )
        #
        #     if score_avec_case_gauche > score_creusee[j][i]:
        #         score_creusee[j][i] = score_avec_case_gauche

        if score_creusee[j][i] > meilleur_score_colonne_actuelle:
            meilleur_score_colonne_actuelle = score_creusee[j][i]
            meilleure_profondeur_colonne_actuelle = j

        print(f"{j = }, ({meilleure_profondeur_colonne_precedente})")

    meilleur_score_colonne_precedente = meilleur_score_colonne_actuelle
    meilleure_profondeur_colonne_precedente = meilleure_profondeur_colonne_actuelle

import numpy as np

print(np.array(score_creusee))

resultat_attendu = [
    [0, 0, 81, 140, 140, 158, 161],
    [-60, 11, 80, 57, 157, 161, 165],
    [-68, -9, 140, 63, 158, 141, 128],
    [-90, 81, 138, 63, 157, 128, 198],
    [-91, 50, 29, 54, 157, 135, 184]
]
print("vs")
print(np.array(resultat_attendu))
