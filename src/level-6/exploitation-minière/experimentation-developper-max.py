import sys

tab = None
example = None
P = None
INFINI = 1000 * 1000 * 1000


def remplis_somme_case(number_line, number_columns):
    for c in range(1, number_columns):
        for l in range(2, number_line + 1):
            somme_case_tab[l][c] = somme_case_tab[l - 1][c] + example[l - 2][c]


def somme_case(prof_creusee_colonne_precedente, i, j):
    somme = somme_case_tab[i][j]

    nb_malus = max(0, i - prof_creusee_colonne_precedente)
    somme -= nb_malus * P

    return somme


def fonc(i, j):
    if i < 0:
        return 0
    if tab[i][j] == -INFINI:
        profit_max = -INFINI
        valeur_case = 0

        if i > 0:
            valeur_case = example[i - 1][j]

        if j == 0:
            if i == 0:
                profit_max = 0
            else:
                profit_max = fonc(i - 1, 0) + valeur_case - P
        else:
            # todo here
            profit_max = max(
                0,
                fonc(0, j - 1) + somme_case(0, i, j),
                fonc(1, j - 1) + somme_case(1, i, j),
                fonc(2, j - 1) + somme_case(2, i, j),
                fonc(3, j - 1) + somme_case(3, i, j),
                fonc(4, j - 1) + somme_case(4, i, j),
            )

            # todo here 2
            profit_max = max(
                0,
                fonc(0, j - 1) + somme_case(0, i, j) - (i - 0) * P,
                fonc(1, j - 1) + somme_case(1, i, j) - (i - 1) * P,
                fonc(2, j - 1) + somme_case(2, i, j) - (i - 2) * P,
                fonc(3, j - 1) + somme_case(3, i, j) - (i - 3) * P,
                fonc(4, j - 1) + somme_case(4, i, j) - (i - 4) * P,
            )
            profit_max += valeur_case

        tab[i][j] = profit_max

    return tab[i][j]


# ---------- Main ----------
if __name__ == "__main__":
    # -------- Lecture des entrées --------
    nb_lignes, nb_colonnes, pallier = map(int, input().split())
    L, C, P = nb_lignes, nb_colonnes, pallier

    example = [None for _ in range(L)]
    for i in range(nb_lignes):
        example[i] = list(map(int, input().split()))

    # -------- Initialisation --------

    # -------- Calcul du résultat --------

    # -------- Affichage du résultat --------
    tab = [[-INFINI for _ in range(C)] for _ in range(L + 1)]
    somme_case_tab = [[0 for _ in range(C)] for _ in range(L + 1)]
    remplis_somme_case(L, C)

    for i in range(L + 1):
        fonc(i, C - 1)

    max_tab = 0

    for l in range(L + 1):
        max_tab = max(max_tab, tab[l][C - 1])

    print(max_tab)
